# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "face detection"
spring.datasource.url = jdbc:mysql://localhost:3306/meeting?AllowPublicKeyRetrieval=True&useSSL=false&useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8
# Username and password
spring.datasource.username = root
spring.datasource.password = 12345

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jackson.serialization.fail-on-empty-beans=false

server.port=7070

logging.level.root=info
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
logging.path=c:/logs
logging.file=${logging.path}/log.log
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n

logging.level.vezarat.behdasht.yas.* = info

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=11MB

jwt.secret = vira@fanavaran@taabin
jwt.time.out = 50000000
jwt.pattern.token.value = [!@$][0-9][0-9][#][A-z][A-z][&*~]

file.path=d:/photo/project
file.thumbnail.path=d:/photo/project

# Enable response compression
server.compression.enabled=true

# The comma-separated list of mime types that should be compressed
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,image/jpeg,image/png

# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=100
